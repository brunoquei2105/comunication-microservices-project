version: '3.8'

volumes:
  db_data: {}

services:
  database_1:
    container_name: auth-db
    image: postgres:13.8
    environment:
      - POSTGRES_DB=auth-db
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
    restart: always
    ports:
      - 5432:5432
    volumes:
      - db_data:/var/lib/postgres_auth_db

  database_2:
    container_name: product-db
    image: postgres:13.8
    environment:
      - POSTGRES_DB=product-db
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
    restart: always
    ports:
      - 5433:5433
    volumes:
      - db_data:/var/lib/postgres_product_db

  database_3:
    container_name: sales-db
    image: mongo
    ports:
      - 27017:27017 
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=sales_db
    restart: always
    volumes:
      - db_data:/var/lib/mongo_db

  #STRING DE CONEX√ÉO MONGO-COMPASS: mongo://admin:password@localhost:27017/sales_db
  
  # mongo-ex:
  #   container_name: mongo-express
  #   image: mongo-express
  #   ports:
  #     - 8001:8001
  #   links:
  #     - database_3
  #   depends_on:
  #     - database_3
  #   environment:
  #     - ME_CONFIG_MONGODB_SERVER=database_3
  #     - ME_CONFIG_MONGODB_PORT=27017
  #     - ME_CONFIG_MONGODB_ENABLE_ADMIN=false
  #     - ME_CONFIG_MONGODB_AUTH_DATABASE=admin
  
  rabbitmq:
    container_name: rabbitmq-docker
    image: rabbitmq:3.10.7-management
    ports:
      - 5672:5672
      - 15672:15672
      - 25676:25676
    volumes:
      - db_data:/var/lib/rabbitmq
      - db_data:/var/log/rabbitmq
  
# user e senha padrao rabbitmq: guest/guest

